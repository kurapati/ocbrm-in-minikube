---
### Deployment Descriptor
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rel-daemon
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.ocbrm.rel_daemon.deployment.replicaCount }}
  selector:
    matchLabels:
      application: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        application: {{ .Chart.Name }}
        component: oms-rel-daemon
      name: rel-daemon
    spec:
      containers:
      - name: rel-daemon
        image: "{{.Values.imageRepository}}{{.Values.ocbrm.rel_daemon.deployment.imageName}}:{{.Values.ocbrm.rel_daemon.deployment.imageTag}}"
        {{- if eq .Values.ocbrm.virtual_time.enabled true }}
        command: ["/bin/sh"]
        args: ["-c", "sleep 10;/oms/entrypoint.sh com.portal.batch.BatchControllerMain REL"]
        {{- end }}
        env:
        - name: INIT_DB
          value: "{{ .Values.ocbrm.init_database }}"
        - name: TZ
          value: "{{ .Values.ocbrm.TZ }}"
        - name: PIN_LOG_DIR
          value: "{{ .Values.ocbrm.logDir }}"
        - name: SERVICE_FQDN
          value: "rel-daemon"
        - name: TNS_ADMIN
          value: "{{ .Values.ocbrm.tnsAdmin }}"
        - name: NLS_LANG
          value: "{{ .Values.ocbrm.db.nls_lang }}"
        - name: ENABLE_SSL
          valueFrom:
            configMapKeyRef:
              name: oms-common-config
              key: ENABLE_SSL
        - name: OMS_SCHEMA_USERNAME
          valueFrom:
            configMapKeyRef:
              name: oms-common-config
              key: OMS_SCHEMA_USERNAME
        - name: OMS_SCHEMA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: oms-schema-password
              key: oms_schema_password
        - name: OMS_DB_HOST
          valueFrom:
            configMapKeyRef:
              name: oms-common-config
              key: OMS_DB_HOST
        - name: OMS_DB_PORT
          valueFrom:
            configMapKeyRef:
              name: oms-common-config
              key: OMS_DB_PORT
        - name: OMS_DB_SERVICE
          valueFrom:
            configMapKeyRef:
              name: oms-common-config
              key: OMS_DB_SERVICE
        - name: OMS_DB_ALIAS
          valueFrom:
            configMapKeyRef:
              name: oms-common-config
              key: OMS_DB_ALIAS
        - name: CM_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: oms-common-config
              key: CM_SERVICE_HOST
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: oms-common-config
              key: LOG_LEVEL
        - name: CM_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: oms-common-config
              key: CM_SERVICE_PORT
        - name: OLD_CLIENT
          valueFrom:
            secretKeyRef:
              name: oms-schema-password
              key: old_client
        - name: ROOT_WALLET_PASSWORD
          valueFrom:
            secretKeyRef:
              name: oms-schema-password
              key: root_wallet_password
        - name: CLIENT_WALLET_PASSWORD
          valueFrom:
            secretKeyRef:
              name: oms-schema-password
              key: client_wallet_password
        - name: SERVER_WALLET_PASSWORD
          valueFrom:
            secretKeyRef:
              name: oms-schema-password
              key: server_wallet_password
        - name: BRM_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: oms-schema-password
              key: brm_root_password
        imagePullPolicy: {{ .Values.ocbrm.imagePullPolicy }}
        terminationMessagePolicy: FallbackToLogsOnError
        livenessProbe:
          exec:
            command:
             - /bin/sh
             - -c
             - netstat -anp | grep LISTEN | grep 24507 | grep java
          initialDelaySeconds: 30
          periodSeconds: 20
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
             - /bin/sh
             - -c
             - netstat -anp | grep LISTEN | grep 24507 | grep java
          initialDelaySeconds: 30
          periodSeconds: 20
        volumeMounts:
        - name: tnsnames-ora-volume
          mountPath: {{ .Values.ocbrm.tnsAdmin }}
        - name: rel-daemon-pin-conf-volume
          mountPath: /oms/pin.conf.tmpl
          subPath: pin.conf
        - name: rel-infranet-properties-volume
          mountPath: /oms/apps/pin_rel/rel_infranet.properties.tmpl
          subPath: Infranet.properties
        - name: oms-rel-input
          mountPath: /oms/apps/pin_rel/gsm/tel/input
        - name: oms-rel-archive
          mountPath: /oms/apps/pin_rel/gsm/tel/archive
        - name: oms-rel-reject
          mountPath: /oms/apps/pin_rel/gsm/tel/reject
        - name: oms-logs
          mountPath: {{ .Values.ocbrm.logDir }}
        - name: outputcdr
          mountPath: /oms/ifw/data/out
        - name: outputreject
          mountPath: /oms/ifw/data/reject
      hostname: rel-d
      dnsPolicy: ClusterFirst
      volumes:
        - name: rel-daemon-pin-conf-volume
          configMap:
            name: rel-daemon-pin-conf-config
        - name: rel-infranet-properties-volume
          configMap:
            name: rel-infranet-properties
        - name: oms-rel-archive
          persistentVolumeClaim:
            claimName: oms-rel-archive
        - name: oms-rel-reject
          persistentVolumeClaim:
            claimName: oms-rel-reject
        - name: oms-rel-input
          persistentVolumeClaim:
            claimName: oms-rel-input
        - name: oms-logs
          emptyDir: {}
        - name: outputcdr
          persistentVolumeClaim:
           claimName: outputcdr
        - name: outputreject
          persistentVolumeClaim:
           claimName: outputreject
        - name: tnsnames-ora-volume
          configMap:
            name: db-config
            items:
              - key: tnsnames.ora
                path: tnsnames.ora
              - key: sqlnet.ora
                path: sqlnet.ora
---
